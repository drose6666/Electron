@mixin hoverLinkUnderline (
   $bgColorStart: var(--dark),
   $bgColorEnd: var(--dark),
   $bgPositionStart: right bottom,
   $bgPositionEnd: left bottom,
   $bgYSize: 1px,
   $duration: .3s,
   $fromEmptiness: true,
   $hoverChild: false,
) {
   @if $hoverChild {
      & > .child {
         background: -webkit-gradient(linear,left top,left bottom,from($bgColorStart));
         background-repeat: no-repeat;
         transition: 
            background-size $duration ease,
            color $duration ease,
            transform $duration ease;
      }

      @if $fromEmptiness {
         & > .child {
            background-position: right bottom;
            background-size: 0% $bgYSize;
         }

         &:hover {
            & > .child {
               background-position: left bottom;
               background-size: 100% $bgYSize;
            }
         }
   
      } @else {
         & > .child {
            background-position: left bottom;
            background-size: 100% $bgYSize;
         }

         &:hover {
            & > .child {
               background-position: right bottom;
               background-size: 0% $bgYSize;
            }
         }
      }

   } @else {
      background: -webkit-gradient(linear,left top,left bottom,from($bgColorStart));
      background-repeat: no-repeat;
      transition: 
            background-size $duration ease,
            color $duration ease,
            transform $duration ease;

      .child {
         transition: all $duration ease;
      }

      @if $fromEmptiness {
         background-position: right bottom;
         background-size: 0% $bgYSize;
   
         &:hover {
            background-position: left bottom;
            background-size: 100% $bgYSize;
         }
   
      } @else {
         background-position: left bottom;
         background-size: 100% $bgYSize;
   
         &:hover {
            background-position: right bottom;
            background-size: 0% $bgYSize;
         }
      }
   }
}

.basicHoverUnderline {
   @include hoverLinkUnderline ( 
      $bgColorStart: var(--action), 
      $duration: .2s,
      $bgYSize: 1px,
      $hoverChild: true
   );
}

.linkHoverFullToEmptiness {
   @include hoverLinkUnderline ( $fromEmptiness: false, $bgYSize: 1px, );

   padding-bottom: 8px;
}


/* TODO Ссылки с иконками */
@mixin uiMore (
   $fSize: 17px,
   $fWeight: 400,
   $color: var(--dark),
   $iconColor: var(--dark),
   $iconHoverColor: var(--action),
   $iconSize: 13px,
   $gap: 15px,
   $transform: translateX(5px),
   $duration: .3s,
   $theme: dark,

) {
   display: inline-flex;
   align-items: center;
   width: max-content;
   gap: $gap;
   cursor: pointer;

   .child {
      font-size: 17px;
      font-weight: 400;
      line-height: 100%;
      color: var(--dark);
   }

   &:after {
      content: '\e905';
      font-family: var(--icon_font);
      font-size: 13px;
      color: var(--dark);
      display: inline-block;
      transition: 
         transform $duration ease,
         color $duration ease;
   }

   &:hover {
      &:after {
         transform: $transform;
      }
   }

   @if $theme == dark {
      .child { color: var(--dark); }
      &:after { color: var(--dark); }

      &:hover {
         .child, &:after {
            color: var(--action);
         }
      }

   } @else if $theme == slowDark {
      .child { color: var(--text_additional); }
      &:after { color: var(--text_additional); }

      &:hover {
         .child, &:after {
            color: var(--action);
         }
      }

   } @else if $theme == light {
      .child { color: var(--light); }
      &:after { color: var(--light); }

      &:hover {
         .child, &:after {
            color: var(--action);
         }
      }
   }
}

.ui-more_basic {
   @include uiMore;
}