@mixin buttonIconTheme (
   $color: var(--light),
   $bg: var(--dark),
   $iconColor: var(--light),
   $iconBg: var(--action),
   $theme: dark,
   $transition: all .2s ease,
) {

   transition: $transition;

   .icon {
      background: $iconBg;
      transition: $transition;

      i {
         color: $iconColor;
         transition: $transition;
      }
   }

   @if $theme == dark {
      $color: var(--light);
      $bg: var(--dark);
      $iconColor: var(--light);
      $iconBg: var(--action);

      color: $color;
      background: $bg;

      .icon {
         background: $iconBg;

         i {
            color: $iconColor;
         }
      }

      &:hover {
         background: var(--action);

         .icon {
            background: var(--dark);
         }
      }

   } @else if $theme == light {
      $color: var(--dark);
      $bg: var(--separating_contrast);
      $iconColor: var(--light);
      $iconBg: var(--dark);

      color: $color;
      background: $bg;

      .icon {
         background: $iconBg;

         i {
            color: $iconColor;
         }
      }

      &:hover {
         background: var(--separating);

         .icon {
            background: var(--action);

            i {
               color: var(--light);
            }
         }
      }

   } @else if $theme == action {
      $color: var(--light);
      $bg: var(--action);
      $iconColor: var(--light);
      $iconBg: var(--dark);

      color: $color;
      background: $bg;

      .icon {
         background: $iconBg;

         i {
            color: $iconColor;
         }
      }

      &:hover {
         background: var(--dark);
         color: var(--light);

         .icon {
            background: var(--action);

            i {
               color: var(--light);
            }
         }
      }

   } @else if $theme == disabled {
      $color: var(--text_additional);
      $bg: var(--separating);
      $iconColor: var(--text_additional);
      $iconBg: var(--separating_contrast);

      color: $color;
      background: var(--bg);
      cursor: none;

      .icon {
         background: $iconBg;

         i {
            color: $iconColor;
         }
      }
   } @else {
      @error "Такого темы кнопки с иконкой не существует #{$theme}.";
   }
}


@mixin buttonIconType (
   $paddingLeft: 20px,
   $gap: 20px,
   $iconSize: 41px,
   $iconFSize: 20px,
   $freeWidth: false,
   $type: primary,
   $maxWidth: 100%
) {
   padding: 2px 2px 2px $paddingLeft;
   display: flex;
   align-items: center;
   justify-content: space-between;
   gap: $gap;
   font-family: inherit;
   font-size: 17px;
   font-weight: 400;
   line-height: 100%;
   border-radius: var(--defaultRd);

   .icon {
      width: $iconSize;
      height: $iconSize;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: var(--circleRd);

      i {
         font-size: $iconFSize;
      }
   }

   @if $type == primary {
      $paddingLeft: 20px;
      $gap: 20px;
      $fSize: 18px;
      $iconSize: 41px;
      $iconFSize: 20px;

      padding: 2px 2px 2px $paddingLeft;
      gap: $gap;
      font-size: $fSize;

      .icon {
         width: $iconSize;
         height: $iconSize;

         i {
            font-size: $iconFSize;
         }
      }

   } @else if $type == ui {
      $paddingLeft: 15px;
      $gap: 15px;
      $fSize: 17px;
      $iconSize: 37px;
      $iconFSize: 20px;

      padding: 2px 2px 2px $paddingLeft;
      gap: $gap;
      font-size: $fSize;

      .icon {
         width: $iconSize;
         height: $iconSize;

         i {
            font-size: $iconFSize;
         }
      }

   } @else {
      @error "Такого типа кнопки с иконкой не существует #{$type}.";
   }

   @if $freeWidth {
      max-width: $maxWidth;
      width: 100%;
      justify-content: space-between;
   }
}

.ui-btn-icon {
   @include buttonIconType( $type: ui );
   @include buttonIconTheme( $theme: light )
}

.btn_more {
   @include buttonIconType( $type: ui );
   @include buttonIconTheme( $theme: light );

   margin: 50px auto 0 auto;
}

.btn_i_popup_primary {
   @include buttonIconType( $type: primary );
   @include buttonIconTheme( $theme: action );
}

.btn_i_primary_dark {
   @include buttonIconType( $type: primary );
   @include buttonIconTheme( $theme: dark );
}

.btn_i_primary_action {
   @include buttonIconType( $type: primary );
   @include buttonIconTheme( $theme: action );
}

.btn_footer-enter {
   @include buttonIconType( $type: primary );
   @include buttonIconTheme( $theme: action );

   padding-left: 30px;
   gap: 30px;
   display: inline-flex;
}
